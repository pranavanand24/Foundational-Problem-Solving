# -*- coding: utf-8 -*-
"""Longest Common Subsequence.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rU2ugjlivKEJBuCPJ3ZCOQTHU119JpML
"""

#Following the recursive approach
N = 0
M = 0

def lcs(S, T, i, j):
    #checking the base case
    if i == N or j == M:
        return 0

    if S[i] == T[j]:
        return lcs(S, T, i + 1, j + 1) + 1
    else:
        return max(lcs(S, T, i, j + 1), lcs(S, T, i + 1, j))

# Driver Code
S = "abcde"
T = "acek"

N = len(S)
M = len(T)

print("Length of longest common subsequence", lcs(S, T, int(0), int(0)))